{
  "name": "openbadges-bakery",
  "version": "1.0.2",
  "description": "Tools for baking and debaking openbadge images",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "bin": {
    "openbadges-bakery": "bin/oven"
  },
  "dependencies": {
    "request": "~2.11.4",
    "streampng": "0.1.7",
    "optimist": "~0.3.5",
    "cheerio": "~0.12.3",
    "concat-stream": "~1.1.0",
    "through": "~2.3.4",
    "buffer-equal": "0.0.0",
    "jws": "~0.2.2"
  },
  "devDependencies": {
    "oneshot": "~0.1.0",
    "jshint": "~0.9.0",
    "tap": "~0.3.1"
  },
  "scripts": {
    "test": "./node_modules/.bin/tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/openbadges-bakery.git"
  },
  "keywords": [
    "openbadges"
  ],
  "author": {
    "name": "Brian J. Brennan"
  },
  "license": "MPL 2.0",
  "readme": "# openbadges-bakery [![Build Status](https://secure.travis-ci.org/mozilla/openbadges-bakery.png)](http://travis-ci.org/mozilla/openbadges-bakery)\n\nAn OpenBadges image baking library that works with PNGs and SVGs\n\n# Install\n```bash\n$ npm install openbadges-bakery\n```\n# CLI Usage\n\n## Baking\n\n```bash\n$ oven [--in ./path/to/image.svg] [--out ./path/to/baked-image.svg] <data>\n```\nIf `--out` is not set, the baked image will print to stdout.\n\nThe input file can also be piped into stdin.\n\n```bash\n$ oven <data> <  ./path/to/image.png  > ./path/to/baked-image.png\n```\n## Extracting\n\n```bash\n$ oven [--in path/to/image.png] --extract\n```\n\nSame as above,  you can also pipe a file to stdin. The data will be printed to stdout.\n\n# Libary Usage\n\n## bakery.bake(options callback);\n\nBakes some data into an image.\n\nOptions are\n- `image`: either a buffer or a stream representing the PNG or SVG to bake\n- `assertion`: assertion to save into the image (optional)\n- `signature`: JSON Web Signature representing a signed OpenBadges assertion (optional)\n\nYou must pass either `assertion` or `signature`\n\n`callback` has the signature `function(err, imageData)`\n\n## bakery.extract(image, callback)\n\nGets the raw data from the badge. This could be a URL, assertion in JSON format or a signature.\n\n`callback` has the signature `function (err, data)`\n\n## bakery.debake(image, callback);\n## bakery.getAssertion(image, callback);\n\nGets the assertion from the badge. If the assertion is remote, this will require an HTTP request. If the assertion is baked into the badge, either directly or as part of a signature, this will pull the local copy.\n\n`image` should be a stream or a buffer\n\n`callback` has the signature `function (err, object)` where `object` is expected to be a OpenBadges assertion.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mozilla/openbadges-bakery/issues"
  },
  "homepage": "https://github.com/mozilla/openbadges-bakery",
  "_id": "openbadges-bakery@1.0.2",
  "_from": "openbadges-bakery@"
}
